{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useBadge from '../useBadge';\nimport { getBadgeUtilityClass } from './badgeClasses';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getBadgeUtilityClass));\n};\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Badge](https://mui.com/base/react-badge/)\r\n *\r\n * API:\r\n *\r\n * - [Badge API](https://mui.com/base/react-badge/components-api/#badge)\r\n */\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(props, forwardedRef) {\n  var _slots$root, _slots$badge;\n  const {\n      children,\n      max: maxProp = 99,\n      slotProps = {},\n      slots = {},\n      showZero = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const BadgeComponent = (_slots$badge = slots.badge) != null ? _slots$badge : 'span';\n  const badgeProps = useSlotProps({\n    elementType: BadgeComponent,\n    externalSlotProps: slotProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeComponent, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * The content rendered within the badge.\r\n   */\n  badgeContent: PropTypes.node,\n  /**\r\n   * The badge will be added relative to this node.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * If `true`, the badge is invisible.\r\n   * @default false\r\n   */\n  invisible: PropTypes.bool,\n  /**\r\n   * Max count to show.\r\n   * @default 99\r\n   */\n  max: PropTypes.number,\n  /**\r\n   * Controls whether the badge is hidden when `badgeContent` is zero.\r\n   * @default false\r\n   */\n  showZero: PropTypes.bool,\n  /**\r\n   * The props used for each slot inside the Badge.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside the Badge.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default Badge;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","useBadge","getBadgeUtilityClass","useSlotProps","useClassNamesOverride","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","invisible","slots","root","badge","Badge","forwardRef","props","forwardedRef","_slots$root","_slots$badge","children","max","maxProp","slotProps","showZero","other","badgeContent","displayValue","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","className","BadgeComponent","badgeProps","process","env","NODE_ENV","propTypes","node","bool","number","shape","oneOfType","func","object"],"sources":["C:/Users/yahir/SSD/Repositorios/Respawn/frontend/node_modules/@mui/base/Badge/Badge.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"badgeContent\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport composeClasses from '../composeClasses';\r\nimport useBadge from '../useBadge';\r\nimport { getBadgeUtilityClass } from './badgeClasses';\r\nimport { useSlotProps } from '../utils';\r\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    invisible\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    badge: ['badge', invisible && 'invisible']\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getBadgeUtilityClass));\r\n};\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Badge](https://mui.com/base/react-badge/)\r\n *\r\n * API:\r\n *\r\n * - [Badge API](https://mui.com/base/react-badge/components-api/#badge)\r\n */\r\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(props, forwardedRef) {\r\n  var _slots$root, _slots$badge;\r\n  const {\r\n      children,\r\n      max: maxProp = 99,\r\n      slotProps = {},\r\n      slots = {},\r\n      showZero = false\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const {\r\n    badgeContent,\r\n    max,\r\n    displayValue,\r\n    invisible\r\n  } = useBadge(_extends({}, props, {\r\n    max: maxProp\r\n  }));\r\n  const ownerState = _extends({}, props, {\r\n    badgeContent,\r\n    invisible,\r\n    max,\r\n    showZero\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'span';\r\n  const rootProps = useSlotProps({\r\n    elementType: Root,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    additionalProps: {\r\n      ref: forwardedRef\r\n    },\r\n    ownerState,\r\n    className: classes.root\r\n  });\r\n  const BadgeComponent = (_slots$badge = slots.badge) != null ? _slots$badge : 'span';\r\n  const badgeProps = useSlotProps({\r\n    elementType: BadgeComponent,\r\n    externalSlotProps: slotProps.badge,\r\n    ownerState,\r\n    className: classes.badge\r\n  });\r\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\r\n    children: [children, /*#__PURE__*/_jsx(BadgeComponent, _extends({}, badgeProps, {\r\n      children: displayValue\r\n    }))]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The content rendered within the badge.\r\n   */\r\n  badgeContent: PropTypes.node,\r\n  /**\r\n   * The badge will be added relative to this node.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * If `true`, the badge is invisible.\r\n   * @default false\r\n   */\r\n  invisible: PropTypes.bool,\r\n  /**\r\n   * Max count to show.\r\n   * @default 99\r\n   */\r\n  max: PropTypes.number,\r\n  /**\r\n   * Controls whether the badge is hidden when `badgeContent` is zero.\r\n   * @default false\r\n   */\r\n  showZero: PropTypes.bool,\r\n  /**\r\n   * The props used for each slot inside the Badge.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the Badge.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    badge: PropTypes.elementType,\r\n    root: PropTypes.elementType\r\n  })\r\n} : void 0;\r\nexport default Badge;"],"mappings":"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"},"metadata":{},"sourceType":"module"}