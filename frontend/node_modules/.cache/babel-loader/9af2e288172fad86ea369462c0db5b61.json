{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liami\\\\OneDrive\\\\Escritorio\\\\Semestre 6\\\\Desarrollo de Software\\\\Respawn\\\\frontend\\\\src\\\\componentes\\\\Divisa\\\\DivisaLista.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DivisaItem from \"./DivisaItem\";\nimport * as DivisaServer from \"./DivisaServer\";\nimport { recuperarBusqueda } from \"../NavBar/MDBNavBar\";\nimport Mensaje from \"../Mensaje/Mensaje\";\nimport style from \"./Divisa.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet [divisas, setDivisas] = [];\nlet [ban, setBan] = [];\nconst DivisaLista = () => {\n  _s();\n  [divisas, setDivisas] = useState([]);\n  [ban, setBan] = useState(false);\n  const [titulo, setTitulo] = useState(\"\");\n  const [contenido, setContenido] = useState(\"\");\n  const [showMensaje, setShowMensaje] = useState(false);\n  const mostrarMensaje = (title, content) => {\n    setTitulo(title);\n    setContenido(content);\n    setShowMensaje(!showMensaje);\n  };\n  useEffect(() => {\n    console.log(listaDivisas(null));\n    // if(!listaDivisas(null)) mostrarMensaje(\"Error\", \"Se perdió la conexión con la Base de Datos. Por favor, intente más tarde\");\n    // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.contenedorTarjetas,\n      children: divisas.map(divisa => /*#__PURE__*/_jsxDEV(DivisaItem, {\n        divisa: divisa,\n        listaDivisas: listaDivisas,\n        divisas: divisas,\n        updateCurrencies: updateCurrencies\n      }, divisa.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Mensaje, {\n      show: showMensaje,\n      close: mostrarMensaje,\n      title: titulo,\n      status: false,\n      children: contenido\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(DivisaLista, \"UtHCCTHL7v8/lkA4kECAnl+l4IA=\");\n_c = DivisaLista;\nexport default DivisaLista;\nexport const listaDivisas = async busqueda => {\n  try {\n    const data = await (await DivisaServer.getAllDivisas()).json();\n    await data.Divisas.forEach(divisa => {\n      if (String(divisa.seleccionado) === \"True\") if (String(divisa.hora) !== String(new Date().getDate())) updateCurrencies(data.Divisas, divisa.simbolo);\n    });\n    if (busqueda == null) setDivisas(sortArray(data.Divisas));else setDivisas(recuperarBusqueda(busqueda, sortArray(data.Divisas)));\n    sortArray(data.Divisas);\n    if (data.message === \"Exitoso\") setBan(true);\n  } catch (error) {\n    setBan(false);\n  }\n};\nconst updateCurrencies = async (divisas, simbolo) => {\n  if (String(simbolo) !== \"ADA\" && String(simbolo) !== \"BTC\") {\n    const dataCurrencies = await (await DivisaServer.getAllCurrencies(simbolo)).json();\n    Object.keys(dataCurrencies.conversion_rates).map(async key => {\n      await divisas.forEach(async divisa => {\n        if (divisa.simbolo === key) {\n          divisa.hora = new Date().getDate();\n          divisa.valor = dataCurrencies.conversion_rates[key];\n          await DivisaServer.updateDivisa(divisa);\n        }\n      });\n    });\n  }\n};\nconst sortArray = divisas => {\n  const nombres = [];\n  const divisasSort = [];\n  divisas.forEach(divisa => {\n    nombres.push(divisa.nombre);\n  });\n  nombres.sort().forEach(nombre => {\n    divisas.forEach(divisa => {\n      if (nombre === divisa.nombre) {\n        divisasSort.push(divisa);\n        divisas = divisas.filter(d => d.nombre !== nombre);\n      }\n    });\n  });\n  return divisasSort;\n};\nvar _c;\n$RefreshReg$(_c, \"DivisaLista\");","map":{"version":3,"names":["React","useEffect","useState","DivisaItem","DivisaServer","recuperarBusqueda","Mensaje","style","jsxDEV","_jsxDEV","Fragment","_Fragment","divisas","setDivisas","ban","setBan","DivisaLista","_s","titulo","setTitulo","contenido","setContenido","showMensaje","setShowMensaje","mostrarMensaje","title","content","console","log","listaDivisas","children","id","contenedorTarjetas","map","divisa","updateCurrencies","fileName","_jsxFileName","lineNumber","columnNumber","show","close","status","_c","busqueda","data","getAllDivisas","json","Divisas","forEach","String","seleccionado","hora","Date","getDate","simbolo","sortArray","message","error","dataCurrencies","getAllCurrencies","Object","keys","conversion_rates","key","valor","updateDivisa","nombres","divisasSort","push","nombre","sort","filter","d","$RefreshReg$"],"sources":["C:/Users/liami/OneDrive/Escritorio/Semestre 6/Desarrollo de Software/Respawn/frontend/src/componentes/Divisa/DivisaLista.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DivisaItem from \"./DivisaItem\";\r\nimport * as DivisaServer from \"./DivisaServer\";\r\nimport { recuperarBusqueda } from \"../NavBar/MDBNavBar\";\r\nimport Mensaje from \"../Mensaje/Mensaje\";\r\nimport style from \"./Divisa.module.css\";\r\n\r\nlet [divisas, setDivisas] = [];\r\nlet [ban, setBan] = [];\r\n\r\nconst DivisaLista = () => {\r\n    [divisas, setDivisas] = useState([]);\r\n    [ban, setBan] = useState(false);\r\n\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    const [contenido, setContenido] = useState(\"\");\r\n    const [showMensaje, setShowMensaje] = useState(false);\r\n\r\n    const mostrarMensaje = (title, content) => {\r\n        setTitulo(title);\r\n        setContenido(content);\r\n        setShowMensaje(!showMensaje);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(listaDivisas(null));\r\n        // if(!listaDivisas(null)) mostrarMensaje(\"Error\", \"Se perdió la conexión con la Base de Datos. Por favor, intente más tarde\");\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return(\r\n        <><div id={style.contenedorTarjetas}>\r\n            {divisas.map(divisa => (\r\n                <DivisaItem key={divisa.id} divisa={divisa} listaDivisas={listaDivisas} divisas={divisas} updateCurrencies={updateCurrencies} />\r\n            ))}\r\n        </div>\r\n\r\n        <Mensaje show={showMensaje} close={mostrarMensaje} title={titulo} status={false}>{contenido}</Mensaje></>\r\n    );\r\n};\r\n\r\nexport default DivisaLista;\r\n\r\nexport const listaDivisas = async (busqueda) => {\r\n    try{\r\n        const data = await (await DivisaServer.getAllDivisas()).json();\r\n        await data.Divisas.forEach(divisa => {\r\n            if(String(divisa.seleccionado) === \"True\")\r\n                if(String(divisa.hora) !== String(new Date().getDate())) updateCurrencies(data.Divisas, divisa.simbolo);\r\n        });\r\n\r\n        if(busqueda == null) setDivisas(sortArray(data.Divisas));\r\n        else setDivisas(recuperarBusqueda(busqueda, sortArray(data.Divisas)));\r\n\r\n        sortArray(data.Divisas);\r\n\r\n        if(data.message === \"Exitoso\") setBan(true);\r\n    }catch(error){\r\n        setBan(false);\r\n    }\r\n};\r\n\r\nconst updateCurrencies = async (divisas, simbolo) => {\r\n    if(String(simbolo) !== \"ADA\" && String(simbolo) !== \"BTC\"){\r\n        const dataCurrencies = await (await DivisaServer.getAllCurrencies(simbolo)).json();\r\n\r\n        Object.keys(dataCurrencies.conversion_rates).map(async key => {\r\n            await divisas.forEach(async divisa => {\r\n                if(divisa.simbolo === key){\r\n                    divisa.hora = new Date().getDate();\r\n                    divisa.valor = dataCurrencies.conversion_rates[key];\r\n\r\n                    await DivisaServer.updateDivisa(divisa);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst sortArray = (divisas) => {\r\n    const nombres = [];\r\n    const divisasSort = [];\r\n\r\n    divisas.forEach(divisa => {\r\n        nombres.push(divisa.nombre);\r\n    });\r\n\r\n    nombres.sort()\r\n    .forEach(nombre => {\r\n        divisas.forEach(divisa => {\r\n            if(nombre === divisa.nombre){\r\n                divisasSort.push(divisa);\r\n                divisas = divisas.filter(d => d.nombre !== nombre);\r\n            }\r\n        });\r\n    });\r\n\r\n    return divisasSort;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}