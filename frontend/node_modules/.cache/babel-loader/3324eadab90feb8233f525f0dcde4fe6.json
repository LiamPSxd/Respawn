{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport useForcedRerendering from '../utils/useForcedRerendering';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\r\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\r\n * It provides information about the item's state (selected, highlighted) and\r\n * handles the item's mouse events.\r\n *\r\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\r\n * @ignore - internal hook.\r\n */\nexport default function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item,\n    rootRef: externalRef\n  } = parameters;\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, externalRef);\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const rerender = useForcedRerendering();\n  useEnhancedEffect(() => {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(() => {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  const createHandleClick = React.useCallback(other => event => {\n    var _other$onClick;\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    event.preventDefault();\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(other => event => {\n    var _other$onMouseOver;\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      onClick: createHandleClick(otherHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(otherHandlers) : undefined,\n      ref: handleRef,\n      tabIndex\n    });\n  };\n  return {\n    getRootProps,\n    highlighted,\n    rootRef: handleRef,\n    selected\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","useForcedRerendering","ListActionTypes","ListContext","useListItem","parameters","handlePointerOverEvents","item","rootRef","externalRef","itemRef","useRef","handleRef","listContext","useContext","Error","dispatch","getItemState","registerHighlightChangeHandler","registerSelectionChangeHandler","highlighted","selected","focusable","rerender","updateHighlightedState","highlightedItem","updateSelectedState","selectedItems","includes","createHandleClick","useCallback","other","event","_other$onClick","onClick","call","defaultPrevented","preventDefault","type","itemClick","createHandlePointerOver","_other$onMouseOver","onMouseOver","itemHover","tabIndex","getRootProps","otherHandlers","arguments","length","undefined","onPointerOver","ref"],"sources":["C:/Users/breay/OneDrive/Documentos/Repositorios/Respawn/frontend/node_modules/@mui/base/useList/useListItem.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\r\nimport useForcedRerendering from '../utils/useForcedRerendering';\r\nimport { ListActionTypes } from './listActions.types';\r\nimport { ListContext } from './ListContext';\r\n\r\n/**\r\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\r\n * It provides information about the item's state (selected, highlighted) and\r\n * handles the item's mouse events.\r\n *\r\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\r\n * @ignore - internal hook.\r\n */\r\nexport default function useListItem(parameters) {\r\n  const {\r\n    handlePointerOverEvents = false,\r\n    item,\r\n    rootRef: externalRef\r\n  } = parameters;\r\n  const itemRef = React.useRef(null);\r\n  const handleRef = useForkRef(itemRef, externalRef);\r\n  const listContext = React.useContext(ListContext);\r\n  if (!listContext) {\r\n    throw new Error('useListItem must be used within a ListProvider');\r\n  }\r\n  const {\r\n    dispatch,\r\n    getItemState,\r\n    registerHighlightChangeHandler,\r\n    registerSelectionChangeHandler\r\n  } = listContext;\r\n  const {\r\n    highlighted,\r\n    selected,\r\n    focusable\r\n  } = getItemState(item);\r\n  const rerender = useForcedRerendering();\r\n  useEnhancedEffect(() => {\r\n    function updateHighlightedState(highlightedItem) {\r\n      if (highlightedItem === item && !highlighted) {\r\n        rerender();\r\n      } else if (highlightedItem !== item && highlighted) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerHighlightChangeHandler(updateHighlightedState);\r\n  });\r\n  useEnhancedEffect(() => {\r\n    function updateSelectedState(selectedItems) {\r\n      if (!selected) {\r\n        if (selectedItems.includes(item)) {\r\n          rerender();\r\n        }\r\n      } else if (!selectedItems.includes(item)) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerSelectionChangeHandler(updateSelectedState);\r\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\r\n  const createHandleClick = React.useCallback(other => event => {\r\n    var _other$onClick;\r\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    dispatch({\r\n      type: ListActionTypes.itemClick,\r\n      item,\r\n      event\r\n    });\r\n  }, [dispatch, item]);\r\n  const createHandlePointerOver = React.useCallback(other => event => {\r\n    var _other$onMouseOver;\r\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: ListActionTypes.itemHover,\r\n      item,\r\n      event\r\n    });\r\n  }, [dispatch, item]);\r\n  let tabIndex;\r\n  if (focusable) {\r\n    tabIndex = highlighted ? 0 : -1;\r\n  }\r\n  const getRootProps = (otherHandlers = {}) => _extends({}, otherHandlers, {\r\n    onClick: createHandleClick(otherHandlers),\r\n    onPointerOver: handlePointerOverEvents ? createHandlePointerOver(otherHandlers) : undefined,\r\n    ref: handleRef,\r\n    tabIndex\r\n  });\r\n  return {\r\n    getRootProps,\r\n    highlighted,\r\n    rootRef: handleRef,\r\n    selected\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}